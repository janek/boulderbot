# Generated by Selenium IDE
import pytest
import time
import json
import logging
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
from bouldergarten import book, check, process_dates, load_driver, open_bookings

# driver = load_driver()
driver = webdriver.Firefox()
open_bookings(driver)

time.sleep(0.5)
desired_timeslot = "19:30"
# Limit to dates for normal bookings (excluding yoga and courses)
dates_wrapper = driver.find_element(By.CSS_SELECTOR, ".drp-course-dates-list-wrap")
# Find spans that contain the chosen time
spans_with_text = dates_wrapper.find_elements_by_xpath(f".//*[contains(text(), '{desired_timeslot}')]")
# The XPATH search returns spans with "17:30-19:30" and "19:30-21:30" for a desired time "19:30"
# The one we want is therefore the latter (or last)
# XXX: this entire process should be improved
correct_span = spans_with_text[-1]
# Filter to find the one where this is the start time, not the end time
print(correct_span.find_element_by_xpath("../../..").get_attribute('outerHTML'))
